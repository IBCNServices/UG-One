version: '3'

services:
    client:
        build: 
            context: ./client
            dockerfile: Dockerfile
        container_name: 'frontend_react'
        restart: always
        stdin_open: true
        ports:
            - '80:80'
        volumes:
            - ./client:/usr/src/node/app
        depends_on:
            - api
        networks:
            - app-network
    api:
        build:
            context: ./api
            dockerfile: dockerfile_vw.yml
        container_name: 'api_backend_express'
        restart: always
        ports:
            - '5000:5000'
        volumes:
            - ./api:/usr/src/app/
        depends_on: 
            - mongo
            - udp_portforward_server
        networks:
            - app-network
    mongo:
        image: 'mongo'
        container_name: 'database_MongoDB'
        restart: always
        environment:
            - MONGO_INITDB_DATABASE=dronemasterproef
            - MONGO_INITDB_ROOT_USERNAME=admin
            - MONGO_INITDB_ROOT_PASSWORD=mylittlesecret
        volumes:
            - ./mongoDB/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
            - ./mongoDB/mongo-volume:/data/db
        ports:
            - '27017:27017'
        networks:
            - app-network
    mongo-express:
        image: mongo-express
        container_name: mongo-express
        restart: always
        depends_on:
            - mongo
        ports:
            - 8081:8081
        environment:
            ME_CONFIG_MONGODB_ADMINUSERNAME: admin
            ME_CONFIG_MONGODB_ADMINPASSWORD: mylittlesecret
        networks:
            - app-network
    udp_portforward_server:
        build: ./portforward
        container_name: 'udp_portforwardserver_express'
        restart: always
        ports:
            - '7500:7500'
            - '14550-14650:14550-14650/udp'
            - '15550-15650:15550-15650/udp'
        expose:
            - '7500'
        volumes:
            - ./portforward:/usr/src/app/
        networks:
            - app-network
    
networks:
    app-network:
        driver: bridge
